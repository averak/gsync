package net.averak.gsync.adapter.dao.dto.base;

import java.time.LocalDateTime;
import java.util.Objects;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

@SuppressWarnings({"all"})
public class RequiredClientVersionDto extends AbstractDto<RequiredClientVersionDto> {
	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column gsync_required_client_version.master_version
	 *
	 * @mbg.generated
	 */
	private String masterVersion;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column gsync_required_client_version.client_version
	 *
	 * @mbg.generated
	 */
	private String clientVersion;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column gsync_required_client_version.os
	 *
	 * @mbg.generated
	 */
	private Long os;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column gsync_required_client_version.created_at
	 *
	 * @mbg.generated
	 */
	private LocalDateTime createdAt;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column gsync_required_client_version.updated_at
	 *
	 * @mbg.generated
	 */
	private LocalDateTime updatedAt;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table gsync_required_client_version
	 *
	 * @mbg.generated
	 */
	public RequiredClientVersionDto(@Nonnull String masterVersion, @Nonnull String clientVersion, @Nonnull Long os,
			@Nonnull LocalDateTime createdAt, @Nonnull LocalDateTime updatedAt) {
		this.masterVersion = masterVersion;
		this.clientVersion = clientVersion;
		this.os = os;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table gsync_required_client_version
	 *
	 * @mbg.generated
	 */
	public RequiredClientVersionDto() {
		super();
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value
	 * of the database column gsync_required_client_version.master_version
	 *
	 * @return the value of gsync_required_client_version.master_version
	 *
	 * @mbg.generated
	 */
	@Nonnull
	public String getMasterVersion() {
		return masterVersion;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of
	 * the database column gsync_required_client_version.master_version
	 *
	 * @param masterVersion
	 *            the value for gsync_required_client_version.master_version
	 *
	 * @mbg.generated
	 */
	public void setMasterVersion(@Nonnull String masterVersion) {
		this.masterVersion = masterVersion;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value
	 * of the database column gsync_required_client_version.client_version
	 *
	 * @return the value of gsync_required_client_version.client_version
	 *
	 * @mbg.generated
	 */
	@Nonnull
	public String getClientVersion() {
		return clientVersion;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of
	 * the database column gsync_required_client_version.client_version
	 *
	 * @param clientVersion
	 *            the value for gsync_required_client_version.client_version
	 *
	 * @mbg.generated
	 */
	public void setClientVersion(@Nonnull String clientVersion) {
		this.clientVersion = clientVersion;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value
	 * of the database column gsync_required_client_version.os
	 *
	 * @return the value of gsync_required_client_version.os
	 *
	 * @mbg.generated
	 */
	@Nonnull
	public Long getOs() {
		return os;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of
	 * the database column gsync_required_client_version.os
	 *
	 * @param os
	 *            the value for gsync_required_client_version.os
	 *
	 * @mbg.generated
	 */
	public void setOs(@Nonnull Long os) {
		this.os = os;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value
	 * of the database column gsync_required_client_version.created_at
	 *
	 * @return the value of gsync_required_client_version.created_at
	 *
	 * @mbg.generated
	 */
	@Nonnull
	public LocalDateTime getCreatedAt() {
		return createdAt;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of
	 * the database column gsync_required_client_version.created_at
	 *
	 * @param createdAt
	 *            the value for gsync_required_client_version.created_at
	 *
	 * @mbg.generated
	 */
	public void setCreatedAt(@Nonnull LocalDateTime createdAt) {
		this.createdAt = createdAt;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value
	 * of the database column gsync_required_client_version.updated_at
	 *
	 * @return the value of gsync_required_client_version.updated_at
	 *
	 * @mbg.generated
	 */
	@Nonnull
	public LocalDateTime getUpdatedAt() {
		return updatedAt;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of
	 * the database column gsync_required_client_version.updated_at
	 *
	 * @param updatedAt
	 *            the value for gsync_required_client_version.updated_at
	 *
	 * @mbg.generated
	 */
	public void setUpdatedAt(@Nonnull LocalDateTime updatedAt) {
		this.updatedAt = updatedAt;
	}

	/**
	 * PK が一致するか判定
	 *
	 * @mbg.generated
	 */
	public boolean isPrimaryKeyEquals(RequiredClientVersionDto other) {
		return Objects.equals(getMasterVersion(), other.getMasterVersion())
				&& Objects.equals(getClientVersion(), other.getClientVersion())
				&& Objects.equals(getOs(), other.getOs());
	}

	/**
	 * マジックカラムにデフォルト値を設定するコンストラクタ
	 *
	 * @mbg.generated
	 */
	public RequiredClientVersionDto(@Nonnull String masterVersion, @Nonnull String clientVersion, @Nonnull Long os) {
		this.masterVersion = masterVersion;
		this.clientVersion = clientVersion;
		this.os = os;
		this.createdAt = LocalDateTime.now();
		this.updatedAt = LocalDateTime.now();
	}
}